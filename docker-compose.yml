version: '3'

services:
  web:
    image: nginx:1.17.5-alpine
    restart: on-failure
    links:
      - app
    depends_on:
      - app
    ports:
      - "8888:80"
    networks:
      default:
    volumes:
      - app-sync:/app:nocopy
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  app:
    build:
      context: .
      dockerfile: Dockerfile-php
    environment:
      COMPOSER_CACHE_DIR: '/app/.composer/cache'
    user: www-data
    links:
      - postgres
    depends_on:
      - postgres
    networks:
      default:
    volumes:
      - app-sync:/app:nocopy
      - app_sessions_data:/var/php/sessions
      - composer_data:/app/.composer/cache
    working_dir: /app

  postgres:
    image: postgres:11-alpine
    restart: on-failure
    ports:
      - 5432
    user: postgres
    networks:
      default:
    volumes:
      - pg_data:/var/lib/postgresql/data:cached
      - ./data:/tmp
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: dev
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev

  mongo:
    image: mongo:4
    networks:
      default:
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      default:
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

  rabbit:
    image: rabbitmq:3-management
    hostname: rabbit
    networks:
      default:
    environment:
      RABBITMQ_ERLANG_COOKIE: "ERLANGCOOKIE"
      RABBITMQ_DEFAULT_USER: "dev"
      RABBITMQ_DEFAULT_PASS: "dev"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"

networks:
  default:

volumes:
  app-sync:
    external:
      name: crm-sync
  pg_data:
  composer_data:
    external:
      name: cs_composer_data
  app_sessions_data:
